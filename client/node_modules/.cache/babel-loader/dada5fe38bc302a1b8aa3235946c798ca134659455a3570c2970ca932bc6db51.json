{"ast":null,"code":"var _jsxFileName = \"/Users/pavanck/react/stackoverflow-clone/client/src/pages/Questions/QuestionsDetails.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport upvote from '../../assets/sort-up.svg';\nimport downvote from '../../assets/sort-down.svg';\nimport './Questions.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst QuestionsDetails = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  console.log(id);\n  var questionsList = [{\n    _id: '1',\n    upVotes: 3,\n    downVotes: 2,\n    noOfAnswers: 2,\n    questionTitle: \"What is a function?\",\n    questionBody: \"It meant to be\",\n    questionTags: ['java', 'node js', 'react js', 'mongodb'],\n    userPosted: 'mano',\n    userId: 1,\n    askedOn: \"jan 1\",\n    answer: [{\n      answerBody: \"Answer\",\n      userAnswered: 'kumar',\n      answeredOn: 'jan 2',\n      userId: 2\n    }]\n  }, {\n    _id: '2',\n    upVotes: 3,\n    downVotes: 2,\n    noOfAnswers: 0,\n    questionTitle: 'What is a function?',\n    questionBody: \"It meant to be\",\n    questionTags: [\"javascript\", \"R\", \"python\"],\n    userPosted: 'mano',\n    userId: 1,\n    askedOn: \"jan 1\",\n    answer: [{\n      answerBody: \"Answer\",\n      userAnswered: 'kumar',\n      answeredOn: 'jan 2',\n      userId: 2\n    }]\n  }, {\n    _id: '3',\n    upVotes: 3,\n    downVotes: 2,\n    noOfAnswers: 0,\n    questionTitle: 'What is a function?',\n    questionBody: \"It meant to be\",\n    questionTags: [\"javascript\", \"R\", \"python\"],\n    userPosted: 'mano',\n    userId: 1,\n    askedOn: \"jan 1\",\n    answer: [{\n      answerBody: \"Answer\",\n      userAnswered: 'kumar',\n      answeredOn: 'jan 2',\n      userId: 2\n    }]\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-details-page\",\n    children: questionsList === null ? /*#__PURE__*/_jsxDEV(\"h\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: questionsList.filter(question => question._id === id).map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [console.log(question), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"question-details-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: question.questionTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-details-container-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question-votes\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: upvote,\n                alt: \"\",\n                width: \"18\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: question.upVotes - question.downVotes\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: downvote,\n                alt: \"\",\n                width: \"18\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '100%'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"question-body\",\n                children: question.questionBody\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"question-details-tags\",\n                children: question.questionTags.map(tag => /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: tag\n                }, tag, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 49\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"question-action-user\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    children: \"Share\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"asked\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)]\n      }, question._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this))\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionsDetails, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n_c = QuestionsDetails;\nexport default QuestionsDetails;\nvar _c;\n$RefreshReg$(_c, \"QuestionsDetails\");","map":{"version":3,"names":["React","useParams","upvote","downvote","jsxDEV","_jsxDEV","Fragment","_Fragment","QuestionsDetails","_s","id","console","log","questionsList","_id","upVotes","downVotes","noOfAnswers","questionTitle","questionBody","questionTags","userPosted","userId","askedOn","answer","answerBody","userAnswered","answeredOn","className","children","fileName","_jsxFileName","lineNumber","columnNumber","filter","question","map","src","alt","width","style","tag","type","_c","$RefreshReg$"],"sources":["/Users/pavanck/react/stackoverflow-clone/client/src/pages/Questions/QuestionsDetails.jsx"],"sourcesContent":["import React from 'react'\nimport { useParams } from 'react-router-dom'\n\nimport upvote from '../../assets/sort-up.svg'\nimport downvote from '../../assets/sort-down.svg'\nimport './Questions.css'\n\nconst QuestionsDetails = () => {\n\n    const { id } = useParams()\n    console.log(id)\n    var questionsList = [{\n        _id: '1',\n        upVotes: 3,\n        downVotes: 2,\n        noOfAnswers: 2,\n        questionTitle: \"What is a function?\",\n        questionBody: \"It meant to be\",\n        questionTags: ['java', 'node js', 'react js', 'mongodb'],\n        userPosted: 'mano',\n        userId: 1,\n        askedOn: \"jan 1\",\n        answer: [{\n              answerBody: \"Answer\",\n              userAnswered: 'kumar',\n              answeredOn: 'jan 2',\n              userId: 2,\n        }]\n      },{\n        _id: '2',\n        upVotes: 3,\n        downVotes: 2,\n        noOfAnswers: 0,\n        questionTitle: 'What is a function?',\n        questionBody: \"It meant to be\",\n        questionTags: [\"javascript\", \"R\", \"python\"],\n        userPosted:'mano',\n        userId: 1,\n        askedOn: \"jan 1\",\n        answer: [{\n          answerBody: \"Answer\",\n          userAnswered: 'kumar',\n          answeredOn: 'jan 2',\n          userId: 2,\n        }]\n      },{\n        _id: '3',\n        upVotes: 3,\n        downVotes: 2,\n        noOfAnswers: 0,\n        questionTitle: 'What is a function?',\n        questionBody: \"It meant to be\",\n        questionTags: [\"javascript\", \"R\", \"python\"],\n        userPosted: 'mano',\n        userId: 1,\n        askedOn: \"jan 1\",\n        answer: [{\n          answerBody: \"Answer\",\n          userAnswered: 'kumar',\n          answeredOn: 'jan 2',\n          userId: 2,\n        }]\n      }]\n\n  return (\n    <div className=\"question-details-page\">\n        {\n            questionsList === null ? \n            <h>Loading...</h> : \n            <>\n            {\n                questionsList.filter(question => question._id === id).map(question => (\n                    <div key={question._id}>\n                        {console.log(question)}\n                        <section className=\"question-details-container\">\n                            <h1>{question.questionTitle}</h1>\n                            <div className='question-details-container-2'>\n                                <div className='question-votes'>\n                                    <img src={upvote} alt='' width='18' />\n                                    <p>{question.upVotes - question.downVotes}</p>\n                                    <img src={downvote} alt='' width='18' />\n                                </div>\n                                <div style={{width: '100%'}} >\n                                    <p className='question-body'>{question.questionBody}</p>\n                                    <div className='question-details-tags'>\n                                        {\n                                            question.questionTags.map((tag) => (\n                                                <p key={tag}>{tag}</p>\n                                            ))\n                                        }\n                                    </div>\n                                    <div className=\"question-action-user\">\n                                        <div>\n                                            <button type='button'>Share</button>\n                                            <button type='button'>Delete</button>\n                                        </div>\n                                        <div>\n                                            <p>asked</p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </section>\n                    </div>\n                ))\n            }\n            </>\n        }\n    </div>\n  )\n}\n\nexport default QuestionsDetails\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}