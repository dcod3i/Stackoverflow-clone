{"ast":null,"code":"// import React from 'react'\nimport * as api from '../api';\nexport const askQuestion = (questionData, navigate) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.postQuestion(questionData);\n    dispatch({\n      type: \"POST_QUESTION\",\n      payload: data\n    });\n    dispatch(fetchAllQuestions());\n    navigate('/');\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchAllQuestions = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getAllQuestions();\n    dispatch({\n      type: 'FETCH_ALL_QUESTIONS',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const postAnswer = answerData => async dispatch => {\n  try {\n    const {\n      id,\n      noOfAnswers,\n      answerBody,\n      userAnswered\n    } = answerData;\n    const {\n      data\n    } = await api.postAnswer(id, noOfAnswers, answerBody, userAnswered);\n    dispatch({\n      type: 'POST_ANSWER',\n      payload: data\n    });\n    dispatch(fetchAllQuestions);\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["api","askQuestion","questionData","navigate","dispatch","data","postQuestion","type","payload","fetchAllQuestions","error","console","log","getAllQuestions","postAnswer","answerData","id","noOfAnswers","answerBody","userAnswered"],"sources":["/Users/pavanck/react/stackoverflow-clone/client/src/actions/question.js"],"sourcesContent":["// import React from 'react'\nimport * as api from '../api'\n\nexport const askQuestion = (questionData, navigate) => async (dispatch) => {\n try {\n    const { data } = await api.postQuestion(questionData);\n    dispatch({ type: \"POST_QUESTION\", payload: data });\n    dispatch(fetchAllQuestions());\n    navigate('/')\n } catch (error) {\n    console.log(error)\n }\n}\n\nexport const fetchAllQuestions = () => async (dispatch) => {\n   try {\n      const  { data } = await api.getAllQuestions()\n      dispatch({type: 'FETCH_ALL_QUESTIONS', payload: data})\n   } catch (error) {\n      console.log(error)\n   }\n}\n\nexport const postAnswer = (answerData) => async (dispatch) => {\n   try {\n      const { id, noOfAnswers, answerBody, userAnswered } = answerData\n      const { data } = await api.postAnswer( id, noOfAnswers, answerBody, userAnswered )\n      dispatch({type: 'POST_ANSWER', payload: data})\n      dispatch(fetchAllQuestions)  \n   } catch (error) {\n      console.log(error)\n   }\n}"],"mappings":"AAAA;AACA,OAAO,KAAKA,GAAG,MAAM,QAAQ;AAE7B,OAAO,MAAMC,WAAW,GAAGA,CAACC,YAAY,EAAEC,QAAQ,KAAK,MAAOC,QAAQ,IAAK;EAC1E,IAAI;IACD,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAML,GAAG,CAACM,YAAY,CAACJ,YAAY,CAAC;IACrDE,QAAQ,CAAC;MAAEG,IAAI,EAAE,eAAe;MAAEC,OAAO,EAAEH;IAAK,CAAC,CAAC;IAClDD,QAAQ,CAACK,iBAAiB,CAAC,CAAC,CAAC;IAC7BN,QAAQ,CAAC,GAAG,CAAC;EAChB,CAAC,CAAC,OAAOO,KAAK,EAAE;IACbC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACrB;AACD,CAAC;AAED,OAAO,MAAMD,iBAAiB,GAAGA,CAAA,KAAM,MAAOL,QAAQ,IAAK;EACxD,IAAI;IACD,MAAO;MAAEC;IAAK,CAAC,GAAG,MAAML,GAAG,CAACa,eAAe,CAAC,CAAC;IAC7CT,QAAQ,CAAC;MAACG,IAAI,EAAE,qBAAqB;MAAEC,OAAO,EAAEH;IAAI,CAAC,CAAC;EACzD,CAAC,CAAC,OAAOK,KAAK,EAAE;IACbC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACrB;AACH,CAAC;AAED,OAAO,MAAMI,UAAU,GAAIC,UAAU,IAAK,MAAOX,QAAQ,IAAK;EAC3D,IAAI;IACD,MAAM;MAAEY,EAAE;MAAEC,WAAW;MAAEC,UAAU;MAAEC;IAAa,CAAC,GAAGJ,UAAU;IAChE,MAAM;MAAEV;IAAK,CAAC,GAAG,MAAML,GAAG,CAACc,UAAU,CAAEE,EAAE,EAAEC,WAAW,EAAEC,UAAU,EAAEC,YAAa,CAAC;IAClFf,QAAQ,CAAC;MAACG,IAAI,EAAE,aAAa;MAAEC,OAAO,EAAEH;IAAI,CAAC,CAAC;IAC9CD,QAAQ,CAACK,iBAAiB,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACbC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACrB;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}